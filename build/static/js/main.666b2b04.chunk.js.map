{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","services/genreService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/search.jsx","components/movies.jsx","components/navBar.jsx","components/customers.jsx","components/rentals.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/notFound.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","movieUrl","id","saveMovie","movie","a","_id","body","http","deleteMovie","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","className","map","p","key","onClick","style","cursor","paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","this","props","textProperty","valueProperty","onItemSelect","selectedItem","item","Component","defaultProps","getGenres","Like","onLike","liked","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","c","scope","label","TableBody","renderCell","content","createKey","data","Table","email","password","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","to","title","deleteColumn","onDelete","currentUser","auth","isAdmin","push","movies","Search","onChange","type","name","e","currentTarget","placeholder","Movies","state","genres","selectedGenre","searchQuery","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handleSort","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","user","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Fragment","Customers","Rentals","Input","errorMessage","rest","htmlFor","Select","options","o","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","movieId","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","NotFound","LoginForm","username","location","window","from","pathname","register","RegisterForm","userService","Logout","ProtectedRoute","component","render","App","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.666b2b04.chunk.js","sourcesContent":["function init() {}\n\nfunction log(error) {\n  console.log(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(id) {\n  return http.get(movieUrl(id));\n}\n\nexport async function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(id) {\n  return http.delete(movieUrl(id));\n}\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((p) => (\n          <li\n            key={p}\n            className={p === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <button\n              onClick={() => onPageChange(p)}\n              className=\"page-link\"\n              style={{ cursor: \"pointer\" }}\n            >\n              {p}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React, { Component } from \"react\";\n\nclass ListGroup extends Component {\n  render() {\n    const {\n      items,\n      textProperty,\n      valueProperty,\n      onItemSelect,\n      selectedItem,\n    } = this.props;\n    return (\n      <ul className=\"list-group\">\n        {items.map((item) => (\n          <li\n            key={item[valueProperty]}\n            onClick={() => onItemSelect(item)}\n            className={\n              item === selectedItem\n                ? \"list-group-item active\"\n                : \"list-group-item\"\n            }\n            style={{ cursor: \"pointer\" }}\n          >\n            {item[textProperty]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/genres\";\n\nexport function getGenres() {\n  return http.get(apiEndpoint);\n}\n\nexport function getGenre(id) {\n  return http.get(apiEndpoint + \"/\" + id);\n}\n","import React from \"react\";\n\nconst Like = (props) => {\n  return (\n    <i\n      onClick={props.onLike}\n      className={props.liked ? \"fa fa-heart\" : \"fa fa-heart-o\"}\n      style={{ cursor: \"pointer\" }}\n    ></i>\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { path, order } = this.props.sortColumn;\n    if (column.path !== path) return null;\n    if (order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((c) => (\n            <th\n              key={c.path || c.key}\n              onClick={() => this.raiseSort(c.path)}\n              scope=\"col\"\n              style={{ cursor: \"pointer\" }}\n            >\n              {c.label} {this.renderSortIcon(c)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, data, onSort }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody data={data} columns={columns} />\n    </table>\n  );\n};\n\nexport default Table;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, {\n    email,\n    password,\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    const user = jwtDecode(jwt);\n    return user;\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport auth from \"../services/authService\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.liked} onLike={() => this.props.onLike(movie)} />\n      ),\n    },\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: (movie) => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    ),\n  };\n\n  constructor() {\n    super();\n    const currentUser = auth.getCurrentUser();\n    if (currentUser && currentUser.isAdmin)\n      this.columns.push(this.deleteColumn);\n  }\n\n  render() {\n    const { movies, sortColumn, onSort } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React, { Component } from \"react\";\n\nclass Search extends Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <div className=\"form-group\">\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={value}\n          onChange={(e) => onChange(e.currentTarget.value)}\n          placeholder=\"Search...\"\n          className=\"form-control my-3\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/genreService\";\nimport MoviesTable from \"./moviesTable\";\n\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./common/search\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    sortColumn: { path: \"title\", order: \"asc\" },\n    selectedGenre: null,\n    searchQuery: \"\",\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const { data: movies } = await getMovies();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n    this.setState({\n      movies,\n      genres,\n    });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This movie has already been deleted.\");\n        this.setState({ movies: originalMovies });\n      }\n    }\n  };\n\n  handleLike = (movie) => {\n    let movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies,\n      sortColumn,\n      searchQuery,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn,\n      searchQuery,\n    } = this.state;\n    const { user } = this.props;\n\n    if (this.state.movies.length === 0)\n      return <h4>There no movies in database</h4>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            onItemSelect={this.handleGenreSelect}\n            selectedItem={selectedGenre}\n            items={this.state.genres}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link to=\"/movies/new\" className=\"btn btn-primary mb-3\">\n              New Movie\n            </Link>\n          )}\n          <h5>Showing {totalCount} movies in the database</h5>\n          <Search value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n            sortColumn={sortColumn}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React, { Component } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Vidly\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/movies\">\n                Movies\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/customers\">\n                Customers\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/rentals\">\n                Rentals\n              </NavLink>\n            </li>\n            {!user && (\n              <React.Fragment>\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/login\">\n                    Login\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/register\">\n                    Register\n                  </NavLink>\n                </li>{\" \"}\n              </React.Fragment>\n            )}\n            {user && (\n              <React.Fragment>\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/profile\">\n                    {user.name}\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/logout\">\n                    Logout\n                  </NavLink>\n                </li>{\" \"}\n              </React.Fragment>\n            )}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nclass Customers extends Component {\n  state = {};\n  render() {\n    return <h1>Customers</h1>;\n  }\n}\n\nexport default Customers;\n","import React, { Component } from \"react\";\n\nclass Rentals extends Component {\n  state = {};\n  render() {\n    return <h1>Rentals</h1>;\n  }\n}\n\nexport default Rentals;\n","import React from \"react\";\n\nconst Input = ({ name, label, errorMessage, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input id={name} name={name} {...rest} className=\"form-control\" />\n      {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ options, name, label, errorMessage, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select id={name} name={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map((o) => (\n          <option key={o._id} value={o._id}>\n            {o.name}\n          </option>\n        ))}\n      </select>\n      {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const { error } = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false,\n    });\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleChange}\n        errorMessage={errors[name]}\n      />\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n    return (\n      <Select\n        options={options}\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleChange}\n        errorMessage={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getGenres } from \"../services/genreService\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number In Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\"),\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Movie Form</h1>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"title\", \"Title\")}\n            {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n            {this.renderInput(\"numberInStock\", \"Number in Stock\")}\n            {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n            {this.renderButton(\"Save\")}\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React, { Component } from \"react\";\n\nclass NotFound extends Component {\n  state = {};\n  render() {\n    return <h1>Not Found</h1>;\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/authService\";\n\nclass LoginForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { username, password } = this.state.data;\n      await auth.login(username, password);\n\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/users\";\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name,\n  });\n}\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      name: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().email().required().label(\"Username\"),\n    password: Joi.string().min(5).required().label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\", \"email\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import { Component } from \"react\";\nimport auth from \"../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport auth from \"../../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/navBar\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport MovieForm from \"./components/movieForm\";\nimport NotFound from \"./components/notFound\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container mt-4\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              exact\n              render={(props) => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}